#!/bin/sh -e

# Created by Robert Gr√∏nning <slimg@iggu.org>

# Usage info
show_help() {
	cat << EOF
Usage: ${0##*/} [Options] create SOURCE_FOLDER [DESTINATION_SQUASHFS_FILE]
       ${0##*/} [Options] install SQUASHFS_FILE
       ${0##*/} [Options] remove APP_ID
       ${0##*/} [Options] launch APP_ID SCRIPT '[ARGUMENTS...]'
       ${0##*/} [Options] info APP_ID
       ${0##*/} [Options] reset APP_ID
       ${0##*/} [Options] list
       ${0##*/} -h
	 Show this help

Options:
  -w WINECELLAR_FOLDER_PATH
       Set alternate path to winecellar folder for this app. Defaults to $HOME/.winecellar.
  -a APP_ID
       Set alternate APP_ID. Defaults to filename of SQUASHFS_FILE without extension.
EOF
}

prepare_directories() {
	mkdir -p "$1/mountro"
	mkdir -p "$1/mount"
	mkdir -p "$1/persistent"
}

unmount_all(){
	# Making sure there are no mounts
	fusermount -u "$1/mountro"
	fusermount -u "$1/mount"
}

while getopts ha:w: opt
do
	case "$opt" in
		a)
			APP_ID="$OPTARG"
			;;
		w)
			WINECELLAR_FOLDER_PATH="$OPTARG"
			;;
		h)
			show_help
			exit 1
			;;
	esac
done
shift $((OPTIND-1))

# Variable declarations
WINECELLAR_FOLDER_PATH="${WINECELLAR_FOLDER_PATH:-$HOME/.winecellar}"

case ${1} in
	create)
		SOURCE_FOLDER=${2}
		APP_ID="${APP_ID:-$(basename $2)}"
		DESTINATION_SQUASHFS_FILE=${3:-}
		echo "Create squashfs file $DESTINATION_SQUASHFS_FILE based on $SOURCE_FOLDER"
		;;
	install)
		APP_ID="${APP_ID:-${2%.*}}"
		SQUASHFS_FILE=${2}
		echo "Installing $SQUASHFS_FILE as $APP_ID ($WINECELLAR_FOLDER_PATH/$APP_ID)"
		;;
	remove)
		APP_ID="${APP_ID:-${2%.*}}"
		echo "Removing $APP_ID ($WINECELLAR_FOLDER_PATH/$APP_ID)"
		;;
	launch)
		APP_ID="${APP_ID:-${2%.*}}"
		prepare_directories "$WINECELLAR_FOLDER_PATH/$APP_ID"
		SCRIPT=${3}
		ARGUMENTS=${4}

		echo "Launching $APP_ID ($WINECELLAR_FOLDER_PATH/$APP_ID/mount/$SCRIPT \"$ARGUMENTS\")"
		unmount_all "$WINECELLAR_FOLDER_PATH/$APP_ID"

		# Try mounting readonly layer
		if ! type "squashfuse" > /dev/null; then exit; fi
		#squashfuse "$IMAGE" "$IMAGEMOUNT"

		# Try mounting readwrite layer
		if ! type "unionfs-fuse" > /dev/null; then exit; fi
		#unionfs-fuse -o cow -o dirs=$IMAGEMOUNT=RO:$STORAGE=RW $WINEPREFIX

		# Launching
		if ! type "wine" > /dev/null; then exit; fi
		#wine "$LAUNCHCMD"
		;;
	info)
		APP_ID="${APP_ID:-${2%.*}}"
		prepare_directories "$WINECELLAR_FOLDER_PATH/$APP_ID"

		echo "Showing information about $APP_ID ($WINECELLAR_FOLDER_PATH/$APP_ID)"
		;;
	reset)
		APP_ID="${APP_ID:-${2%.*}}"
		prepare_directories "$WINECELLAR_FOLDER_PATH/$APP_ID"
		unmount_all "$WINECELLAR_FOLDER_PATH/$APP_ID"
		echo "Resetting $APP_ID ($WINECELLAR_FOLDER_PATH/$APP_ID/persistent)"
		;;
	list)
		prepare_directories "$WINECELLAR_FOLDER_PATH"
		echo "Listing all APP_ID available"
		if ! type "find" > /dev/null; then exit; fi
		cd "$WINECELLAR_FOLDER_PATH"
		find * -maxdepth 0 -type d
		;;
	*)
		show_help
		;;
esac
